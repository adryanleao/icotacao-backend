Description: Load Balancer

Resources:
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: 30
      SecurityGroups:
        - !Ref ApplicationLoadBalancerSecurityGroup
      Subnets:
        - !ImportValue PublicSubnetOne
        - !ImportValue PublicSubnetTwo

  ApplicationLoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP/HTTPS from anywhere
      VpcId: !ImportValue VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0

  ApplicationLoadBalancerDns:
    Type: AWS::Route53::RecordSet
    DependsOn: [ApplicationLoadBalancer]
    Properties:
      HostedZoneId: !ImportValue Zone
      Name: !Join ['.', [alb, !ImportValue Domain]]
      Type: A
      AliasTarget:
        DNSName: !GetAtt [ApplicationLoadBalancer, DNSName]
        HostedZoneId: !GetAtt [ApplicationLoadBalancer, CanonicalHostedZoneID]

  HttpListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Protocol: HTTPS
            Port: 443
            Host: '#{host}'
            Path: '/#{path}'
            Query: '#{query}'
            StatusCode: HTTP_301
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP

  TempHttpListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig:
            ContentType: text/plain
            MessageBody: The service you're looking for could not be found.
            StatusCode: 501
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 81
      Protocol: HTTP

  HttpsListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig:
            ContentType: text/plain
            MessageBody: The service you're looking for could not be found.
            StatusCode: 501
      Certificates:
        - CertificateArn: arn:aws:acm:us-east-1:343271181431:certificate/90c2e34b-b067-4c4a-8133-fcf46d2a6597
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 443
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-TLS-1-2-2017-01

  ContainerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP from Load Balancer
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          FromPort: -1
          IpProtocol: -1
          ToPort: -1
      SecurityGroupIngress:
        - FromPort: 80
          IpProtocol: tcp
          ToPort: 80
          SourceSecurityGroupId: !Ref ApplicationLoadBalancerSecurityGroup
      VpcId: !ImportValue VpcId

  ContainerSecurityGroupIngressFromSelf:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress from other containers in the cluster
      GroupId: !Ref ContainerSecurityGroup
      IpProtocol: -1
      SourceSecurityGroupId: !Ref ContainerSecurityGroup

Outputs:
  ContainerSecurityGroup:
    Description: Container Security Group that allows connection from itself as well as the Application Load Balancer.
    Value: !Ref ContainerSecurityGroup
    Export:
      Name: ContainerSecurityGroup

  TempHttpListener:
    Description: Exposes the HTTP Listener for other services to attach routing rules to it.
    Value: !Ref TempHttpListener
    Export:
      Name: TempHttpListener

  HttpsListener:
    Description: Exposes the HTTPS Listener for other services to attach routing rules to it.
    Value: !Ref HttpsListener
    Export:
      Name: HttpsListener

  ApplicationLoadBalancer:
    Description: Exposes the Application Load Balancer ARN
    Value: !Ref ApplicationLoadBalancer
    Export:
      Name: ApplicationLoadBalancer

  ApplicationLoadBalancerCustomDns:
    Description: Application Load Balancer DNS
    Value: !Ref ApplicationLoadBalancerDns
    Export:
      Name: ApplicationLoadBalancerCustomDns
